{"version":3,"sources":["app.js","environment.js","main.js","highscore/highscore-table.js","highscore/highscore.js","game/create.js","game/edit-questions.js","game/join.js","lobby/lobby.js","home/index.js","question/question.js","services/game-hub-singleton.js","services/signalr-service.js","resources/index.js","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/app.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/styles/bootstrap.min.css","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/highscore/highscore-table.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/styles/styles.css","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/highscore/highscore.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/lobby/lobby.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/home/datenschutz.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/home/impressum.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/home/index.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/question/question.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/game/create.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/game/edit-questions.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/game/join.html"],"names":["App","message","configureRouter","config","router","title","map","route","name","moduleId","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","HighscoreTableCustomElement","activate","questions","highscore","signalrService","eventAggregator","isFinished","highscoreTableModel","Entries","names","score","answerStatistics","mrs","mr","both","previousQuestionIndex","params","self","subscribe","console","log","game","currentQuestion","currentQuestionIndex","statistics","playerList","totalPlayers","length","verifyConnected","gameId","getHighscore","calculatePercentage","count","total","Math","floor","create","playerlist","nameMr","nameMrs","window","localStorage","setItem","updatedPlayerList","startGame","navigateToRoute","isModerator","EditQuestions","parentModel","newQuestionText","buttonsDisabled","questionsModel","i","push","Question","updateQuestions","deleteQuestion","question","index","indexOf","splice","addQuestion","questionToCreate","moveUp","text","currentIndex","move","moveDown","targetIndex","questionToMove","rawQuestions","triggerUpdateCallback","editActive","changeEditState","updateText","join","inject","theRouter","guid","s4","random","toString","substring","joinGame","client","accountKey","getItem","postParams","username","createRequest","asPost","withHeader","withContent","send","result","JSON","parse","data","response","Storage","alert","state","showHighscore","$","click","post","userName","val","ajax","url","method","createGame","isLastQuestion","selectedAnswer","updatedQuestionIndex","questionIndex","info","nextQuestion","endGame","selectAnswer","answer","GameHubSingleton","hub","createGameHub","connection","createHubProxy","qs","logging","SignalrService","gameHub","getGameId","promise","resolve","reject","instance","on","updatedPlayerlist","publish","done","invoke","server","showNextQuestion"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n    constructor() {\r\n        this.message = 'Hello World!';\r\n    }\r\n\r\n    configureRouter(config, router) {\r\n        this.router = router;\r\n        config.title = 'Mr & Mrs';\r\n        config.map([\r\n            { route: ['', 'home'], name: 'home', moduleId: 'home/index' },\r\n            { route: ['/game/create'], name: 'gameCreation', moduleId: 'game/create' },\r\n            { route: ['/game/join'], name: 'game', moduleId: 'game/join' },\r\n            { route: ['/question/question'], name: 'question', moduleId: 'question/question' },\r\n            { route: ['/highscore'], name: 'highscore', moduleId: 'highscore/highscore' },\r\n            { route: ['/lobby'], name: 'lobby', moduleId: 'lobby/lobby' },\r\n            { route: ['/impressum'], name: 'impressum', moduleId: 'home/impressum.html' },\r\n            { route: ['/datenschutz'], name: 'datenschutz', moduleId: 'home/datenschutz.html' }\r\n            // { route: 'users', name: 'users', moduleId: 'users/index', nav: true },\r\n            // { route: 'users/:id/detail', name: 'userDetail', moduleId: 'users/detail' },\r\n            // { route: 'files*path', name: 'files', moduleId: 'files/index', href: '#files', nav: true }\r\n        ]);\r\n    }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .router()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import { bindable } from 'aurelia-framework';\r\n\r\nexport class HighscoreTableCustomElement {\r\n  @bindable model;\r\n\r\n\r\n  activate(questions){\r\n  debugger;  \r\n  }\r\n}\r\n\r\n","import { HttpClient } from \"aurelia-http-client\";\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { SignalrService } from 'services/signalr-service';\r\nimport { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { computedFrom } from 'aurelia-framework';\r\n\r\n@inject(SignalrService, EventAggregator, Router)\r\nexport class highscore {\r\n    constructor(signalrService, eventAggregator, router) {\r\n        this.message = 'Hello World!';\r\n        this.isFinished = false;\r\n        this.eventAggregator = eventAggregator;\r\n        this.signalrService = signalrService;\r\n        this.highscoreTableModel = {\r\n            Entries: [{\r\n                names: \"?\",\r\n                score: \"?\"\r\n            }],\r\n        };\r\n        this.answerStatistics = {\r\n            mrs: 0,\r\n            mr: 0,\r\n            both: 0\r\n        };\r\n        \r\n        this.previousQuestionIndex = -1;\r\n    }\r\n\r\n    activate(params) {\r\n        var self = this;\r\n\r\n\r\n        this.eventAggregator.subscribe(\"highscoreUpdated\", function (highscore) {\r\n            console.log(\"highscore should be updated.\", highscore);\r\n            self.highscoreTableModel = highscore;\r\n        });\r\n\r\n\r\n        this.eventAggregator.subscribe(\"gameUpdated\", function (game) {\r\n            console.log(\"game updated.\", game);\r\n            self.game = game;\r\n            self.currentQuestion = game.questions[game.currentQuestionIndex];\r\n            \r\n            if (game.currentQuestionIndex !== self.previousQuestionIndex) {\r\n                self.answerStatistics.mr = 0;\r\n                self.answerStatistics.mrs = 0;\r\n                self.answerStatistics.both = 0;\r\n            }\r\n        });\r\n\r\n        this.eventAggregator.subscribe(\"answerSelected\", function (statistics) {\r\n            console.log(\"Answer statistic updated.\", statistics);\r\n            self.answerStatistics = statistics;\r\n        });\r\n\r\n        this.eventAggregator.subscribe(\"playerListUpdated\", function (playerList) {\r\n            self.totalPlayers = playerList.length;\r\n        });\r\n\r\n        this.game = {\r\n            questions: [],\r\n        };\r\n\r\n        this.signalrService.verifyConnected(params.gameId)\r\n            .then((game) => {\r\n                self.game = game;\r\n                console.log(\"received game on connected state\", game);\r\n                self.signalrService.getHighscore();\r\n                return game;\r\n            });\r\n    }\r\n\r\n    @computedFrom\r\n    get statsMrs() {\r\n        return this.calculatePercentage(this.answerStatistics.mrs, this.totalPlayers);\r\n    }\r\n\r\n    @computedFrom\r\n    get statsMr() {\r\n        return this.calculatePercentage(this.answerStatistics.mr, this.totalPlayers);\r\n    }\r\n\r\n    @computedFrom\r\n    get statsBoth() {\r\n        return this.calculatePercentage(this.answerStatistics.both, this.totalPlayers);\r\n    }\r\n\r\n    calculatePercentage(count, total) {\r\n        return Math.floor((count / total) * 100);\r\n    }\r\n}\r\n","import { SignalrService } from 'services/signalr-service';\r\nimport { inject } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(SignalrService, EventAggregator, Router)\r\nexport class create {\r\n    constructor(signalrService, eventAggregator, router) {\r\n        this.playerlist = [\"Noch keine Spieler\"];\r\n        this.signalrService = signalrService;\r\n        this.eventAggregator = eventAggregator;\r\n        this.router = router;\r\n        this.nameMr = \"\";\r\n        this.nameMrs = \"\";\r\n    }\r\n\r\n    questions = [];\r\n\r\n    activate(params) {\r\n        var self = this;\r\n        this.gameId = params.gameId;\r\n        window.localStorage.setItem(\"username\", \"moderator\");\r\n        window.localStorage.setItem(\"currentGame\", this.gameId);\r\n        window.localStorage.setItem(\"isModerator\", true);\r\n\r\n        this.signalrService.verifyConnected(this.gameId)\r\n            .then((game) => {\r\n                self.game = game;\r\n                self.questions = game.questions;\r\n\r\n                this.eventAggregator.subscribe('playerListUpdated', (updatedPlayerList) => {\r\n                    console.log(\"we should update playerlist now for moderator view.\")\r\n                    console.log(updatedPlayerList);\r\n                    self.playerlist = updatedPlayerList;\r\n                });\r\n            });\r\n    }\r\n\r\n    startGame() {\r\n        var self = this;\r\n        this.signalrService.startGame(self.game.gameId)\r\n            .then(() => {\r\n                console.log(\"change view now\");\r\n                self.router.navigateToRoute(\"question\", {\r\n                    isModerator: true,\r\n                    gameId: self.game.gameId\r\n                });\r\n            });\r\n    }\r\n}\r\n","import { SignalrService } from 'services/signalr-service';\r\nimport { inject } from 'aurelia-framework';\r\nimport { create } from './create';\r\n\r\n@inject(create, SignalrService)\r\nexport class EditQuestions {\r\n  constructor(parentModel, signalrService) {\r\n    this.parentModel = parentModel;\r\n    this.signalrService = signalrService;\r\n    this.newQuestionText = \"\";\r\n    this.buttonsDisabled = false;\r\n  }\r\n\r\n  activate(questions) {\r\n    this.questions = questions;\r\n    this.questionsModel = [];\r\n\r\n    for (var i = 0; i < this.questions.length; i++) {\r\n      this.questionsModel.push(new Question(this.questions[i], () => this.updateQuestions()));\r\n    }\r\n  }\r\n\r\n  get lastQuestion() {\r\n    return this.questionsModel[this.questionsModel.length - 1];\r\n  }\r\n\r\n  get firstQuestion() {\r\n    return this.questionsModel[0];\r\n  }\r\n  \r\n\r\n  deleteQuestion(question) {\r\n    var index = this.questionsModel.indexOf(question);\r\n    this.questionsModel.splice(index, 1);\r\n    this.updateQuestions();\r\n  }\r\n\r\n  addQuestion() {\r\n    let questionToCreate = new Question(this.newQuestionText, () => this.updateQuestions());\r\n    this.questionsModel.push(questionToCreate);\r\n    this.updateQuestions();\r\n    this.newQuestionText = \"\";\r\n  }\r\n\r\n  moveUp(question) {\r\n    console.log(\"move question up\", question.text);\r\n    var currentIndex = this.questionsModel.indexOf(question);\r\n    this.move(question, currentIndex - 1);\r\n  }\r\n\r\n  moveDown(question) {\r\n    console.log(\"move question down\", question.text);\r\n    var currentIndex = this.questionsModel.indexOf(question);\r\n    this.move(question, currentIndex + 1);\r\n  }\r\n\r\n  move(question, targetIndex) {\r\n    var currentIndex = this.questionsModel.indexOf(question);\r\n    var questionToMove = this.questionsModel[targetIndex];\r\n    this.questionsModel.splice(targetIndex, 1, question);\r\n    this.questionsModel.splice(currentIndex, 1, questionToMove);\r\n    this.updateQuestions();\r\n  }\r\n\r\n  updateQuestions() {\r\n    var self = this;\r\n    self.buttonsDisabled = true;\r\n    var rawQuestions = this.questionsModel.map(function (question) {\r\n      return question.text;\r\n    });\r\n\r\n    console.log(\"questions to update:\", rawQuestions);\r\n\r\n    this.signalrService.updateQuestions(rawQuestions).then(() => {\r\n      console.log(\"questions updated on server\")\r\n      self.buttonsDisabled = false;\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport class Question {\r\n  constructor(text, triggerUpdateCallback) {\r\n    this.text = text;\r\n    this.editActive = false;\r\n    this.triggerUpdateCallback = triggerUpdateCallback;\r\n  }\r\n\r\n  changeEditState() {\r\n    this.editActive = true;\r\n  }\r\n\r\n  updateText() {\r\n    this.editActive = false;\r\n    this.triggerUpdateCallback();\r\n  }\r\n}\r\n\r\n","import { HttpClient } from \"aurelia-http-client\";\r\nimport { Router } from 'aurelia-router';\r\n\r\nexport class join {\r\n\r\n    static inject() { return [Router]; }\r\n\r\n    constructor(router) {\r\n        this.name = \"\";\r\n        this.gameId = \"\";\r\n        this.theRouter = router;\r\n    }\r\n\r\n    guid() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n            this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n    s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n\r\n    joinGame() {\r\n        var client = new HttpClient();\r\n\r\n        var accountKey = window.localStorage.getItem(\"accountKey\");\r\n        if(!accountKey){\r\n            accountKey = this.guid();\r\n            window.localStorage.setItem(\"accountKey\", accountKey);\r\n        }\r\n\r\n        var postParams = {\r\n            username: this.name,\r\n            gameId: this.gameId,\r\n            accountKey : accountKey\r\n        };\r\n\r\n        console.log(\"try to join game\", postParams);\r\n\r\n        client.createRequest(\"/game/join\")\r\n            .asPost()\r\n            .withHeader('Content-Type', 'application/json; charset=utf-8')\r\n            .withContent(postParams)\r\n            .send()\r\n            .then(data => {\r\n                var result = JSON.parse(data.response);\r\n                console.log(\"result\", result);\r\n\r\n                if (result.result === \"allow_connection\") {\r\n                    if (typeof (Storage) !== \"undefined\") {\r\n                        // Code for localStorage/sessionStorage.\r\n                        window.localStorage.setItem(\"username\", postParams.username);\r\n                        window.localStorage.setItem(\"currentGame\", result.game.gameId);\r\n                        window.localStorage.setItem(\"isModerator\", false);\r\n                    } else {\r\n                        alert(\"Sorry, no support for your browser.\")\r\n                        return;\r\n                    }\r\n\r\n                    // -> lobby\r\n                    if (result.game.state === 0) {\r\n                        this.theRouter.navigateToRoute(\"lobby\", {\r\n                            gameId: result.game.gameId,\r\n                            username: postParams.username\r\n                        });\r\n                    }\r\n\r\n                    // -> question\r\n                    if (result.game.state === 1) {\r\n                        this.theRouter.navigateToRoute(\"question\", {\r\n                            gameId: result.game.gameId,\r\n                        });\r\n                    }\r\n\r\n                    // -> question\r\n                    if (result.game.state === 2) {\r\n                        this.theRouter.navigateToRoute(\"highscore\", {\r\n                            gameId: result.game.gameId,\r\n                        });\r\n                    }\r\n\r\n\r\n                } else {\r\n                    alert(result.result);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    showHighscore() {\r\n        this.theRouter.navigateToRoute(\"highscore\", {\r\n            gameId: this.gameId,\r\n        });\r\n    }\r\n\r\n}\r\n","import { SignalrService } from 'services/signalr-service';\r\nimport { inject } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(SignalrService, EventAggregator, Router)\r\nexport class join {\r\n    constructor(signalrService, eventAggregator, router) {\r\n        console.log(\"lobby.js: received signalr service in constructor\")\r\n        this.message = 'Hello World!';\r\n        this.playerlist = [\"Noch keine Spieler\"];\r\n        this.signalrService = signalrService;\r\n        this.eventAggregator = eventAggregator;\r\n        this.router = router;\r\n    }\r\n\r\n    activate(params) {\r\n        var self = this;\r\n        console.log(\"welcome to the lobby\");\r\n\r\n        this.signalrService.verifyConnected(params.gameId)\r\n            .then(() => {\r\n                this.eventAggregator.subscribe('playerListUpdated', (updatedPlayerList) => {\r\n                    console.log(\"we should update playerlist now.\")\r\n                    console.log(updatedPlayerList);\r\n                    self.playerlist = updatedPlayerList;\r\n                })\r\n\r\n                this.eventAggregator.subscribe(\"gameStarted\", (game) => {\r\n                    self.router.navigateToRoute(\"question\", {\r\n                        isModerator: false,\r\n                        gameId: game.gameId,\r\n                    });\r\n                });\r\n            });\r\n    }\r\n}\r\n","import { HttpClient } from \"aurelia-http-client\";\r\nimport { Router } from 'aurelia-router';\r\n\r\nlet client = new HttpClient();\r\n\r\nexport class index {\r\n\r\n    static inject() { return [Router]; }\r\n\r\n    constructor(router) {\r\n        this.theRouter = router;\r\n    }\r\n\r\n    activate() {\r\n        $(\"#publishPostButton\").click(function () {\r\n\r\n            const post = {\r\n                userName: $(\"#userNameInput\").val() || \"Guest\",\r\n                text: $(\"#textInput\").val()\r\n            };\r\n            $.ajax({\r\n                url: \"/api/Posts/AddPost\",\r\n                method: \"POST\",\r\n                data: post\r\n            });\r\n        });\r\n    }\r\n\r\n    createGame() {\r\n        console.log(\"create game start\");\r\n\r\n        client.post(\"/game/create\")\r\n            .then(data => {\r\n                var game = JSON.parse(data.response);\r\n                console.log(\"created game on server\", game);\r\n                this.theRouter.navigateToRoute(\"gameCreation\", { gameId: game.gameId });\r\n            });\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { SignalrService } from 'services/signalr-service';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(SignalrService, EventAggregator, Router)\r\nexport class question {\r\n    constructor(signalrService, eventAggregator, router) {\r\n        this.isModerator = false;\r\n        this.signalrService = signalrService;\r\n        this.eventAggregator = eventAggregator;\r\n        this.router = router;\r\n        this.isLastQuestion = false;\r\n        this.selectedAnswer =  -1;\r\n    }\r\n\r\n    activate(params) {\r\n        var self = this;\r\n        self.gameId = params.gameId;\r\n\r\n        this.signalrService.verifyConnected(params.gameId)\r\n            .then((game) => {\r\n                self.game = game;\r\n                this.eventAggregator.subscribe(\"questionChangeRequested\", function (updatedQuestionIndex) {\r\n                    console.log(\"view should change question now.\");\r\n                    self.questionIndex = updatedQuestionIndex;\r\n                    self.currentQuestion = game.questions[self.questionIndex];\r\n                    self.isLastQuestion = (self.questionIndex + 1 === game.questions.length);\r\n                    self.selectedAnswer = -1;\r\n                });\r\n\r\n                this.eventAggregator.subscribe(\"answerSelected\", function (info) {\r\n                    console.log(\"some user selected answer\", info);\r\n                });\r\n\r\n                this.eventAggregator.subscribe(\"gameEnded\", function () {\r\n                    console.log(\"moderator as finished game.\");\r\n                    self.router.navigateToRoute(\"highscore\", {\r\n                        gameId: self.gameId\r\n                    });\r\n                });\r\n\r\n                console.log(\"question view activated with params\", params);\r\n                this.isModerator = params.isModerator === \"true\";\r\n                this.questionIndex = game.currentQuestionIndex;\r\n                this.currentQuestion = game.questions[this.questionIndex];\r\n                this.isLastQuestion = (self.questionIndex + 1 === game.questions.length);\r\n            });\r\n    }\r\n\r\n    get nextQuestionButtonDisabled(){\r\n        return this.selectedAnswer === -1;\r\n    }\r\n\r\n    nextQuestion() {\r\n        var self = this;\r\n        this.signalrService.verifyConnected()\r\n            .then(() => self.signalrService.nextQuestion());\r\n    }\r\n\r\n    endGame() {\r\n        var self = this;\r\n        self.signalrService.verifyConnected()\r\n            .then(() => self.signalrService.endGame());\r\n    }\r\n\r\n    selectAnswer(answer) {\r\n        var index = this.questionIndex;\r\n        this.selectedAnswer = answer;\r\n        this.signalrService.selectAnswer(answer, index)\r\n            .then(() => {\r\n                console.log(\"user info: selected answer\" + answer + \"for questionIndex: \" + index);\r\n            });\r\n    }\r\n}","export class GameHubSingleton {\r\n    constructor() {\r\n        this.hub = false;\r\n\r\n    }\r\n\r\n\r\n    createGameHub(username, gameId) {\r\n        if (this.hub) {\r\n            return hub;\r\n        }\r\n\r\n        var hub = $.connection.hub.createHubProxy(\"postsHub\");\r\n        $.connection.hub.qs = 'username=' + username + '&gameId=' + gameId;\r\n        $.connection.hub.logging = true;\r\n\r\n        this.hub = hub;\r\n        return hub;\r\n    }\r\n\r\n    get instance() {\r\n        return this.hub;\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { GameHubSingleton } from 'services/game-hub-singleton';\r\n\r\n@inject(EventAggregator, GameHubSingleton)\r\nexport class SignalrService {\r\n  constructor(eventAggregator, gameHub) {\r\n    console.log(\"signalr service constructor created\")\r\n    this.eventAggregator = eventAggregator;\r\n    this.gameHub = gameHub;\r\n  }\r\n\r\n  activate(params) {\r\n    console.log(\"signalr service activated\")\r\n  }\r\n\r\n  getGameId() {\r\n    var gameId = window.localStorage.getItem(\"currentGame\");\r\n    if (!gameId) {\r\n      throw \"No gameId currently attached to.\";\r\n    }\r\n\r\n    return gameId;\r\n  }\r\n\r\n  verifyConnected(gameId) {\r\n    var username = window.localStorage.getItem(\"username\");\r\n\r\n    if (!gameId) {\r\n      gameId = this.getGameId();\r\n    }\r\n\r\n    var self = this;\r\n\r\n    var promise = new Promise(\r\n      (resolve, reject) => {\r\n\r\n        // already connected hack\r\n        if (!!self.gameHub.instance) {\r\n          resolve(self.game);\r\n          return;\r\n        }\r\n        var gameHub = self.gameHub.createGameHub(username, gameId);\r\n\r\n        gameHub.on('playerListUpdated', function (updatedPlayerlist) {\r\n          console.log(\"Received playerlist\");\r\n          console.log(updatedPlayerlist);\r\n          self.eventAggregator.publish('playerListUpdated', updatedPlayerlist);\r\n        });\r\n\r\n        gameHub.on(\"gameStarted\", function (game) {\r\n          console.log(\"server signalled game was started by moderator\");\r\n          self.eventAggregator.publish('gameStarted', game);\r\n        });\r\n\r\n        gameHub.on(\"questionChangeRequested\", function (response) {\r\n          console.log(\"server signalled question change\", response);\r\n          self.eventAggregator.publish('questionChangeRequested', response);\r\n        });\r\n\r\n        gameHub.on(\"answerSelected\", function (response) {\r\n          console.log(\"user selected answer\", response);\r\n          self.eventAggregator.publish('answerSelected', response);\r\n        });\r\n\r\n        gameHub.on(\"gameEnded\", function (response) {\r\n          console.log(\"moderator has finished the game\", response);\r\n          self.eventAggregator.publish('gameEnded', response);\r\n        });\r\n\r\n        gameHub.on(\"gameUpdated\", function (game) {\r\n          self.game = game;\r\n          resolve(game);\r\n          console.log(\"server sent updated game.\", game);\r\n          self.eventAggregator.publish('gameUpdated', game);\r\n        });\r\n\r\n        gameHub.on(\"highscoreUpdated\", function (highscore) {\r\n          console.log(\"server sent highscore update.\", highscore);\r\n          self.eventAggregator.publish('highscoreUpdated', highscore);\r\n        });\r\n\r\n        $.connection.hub.start().done(function () {\r\n          console.log(\"hub is started now.\");\r\n          gameHub.invoke('updatePlayerList');\r\n        });\r\n\r\n      }\r\n    );\r\n\r\n    return promise;\r\n  }\r\n\r\n  startGame(gameId) {\r\n    var self = this;\r\n    return new Promise((resolve, reject) => {\r\n      console.log(\"triggered game start\");\r\n      self.gameHub.instance.server.startGame(gameId).done(() => {\r\n        console.log(\"game started successfully\");\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  nextQuestion() {\r\n    var self = this;\r\n    console.log(\"moderator switches to next question\");\r\n    return new Promise((resolve, reject) => {\r\n      self.gameHub.instance.server.showNextQuestion(self.game.gameId).done(() => {\r\n        console.log(\"next question request sent.\");\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  selectAnswer(answer, questionIndex) {\r\n    var self = this;\r\n    return new Promise((resolve, reject) => {\r\n      self.gameHub.instance.server.selectAnswer(answer, questionIndex).done(() => {  // todo user info\r\n        console.log(\"selected answer sent to server\", answer, questionIndex);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  endGame() {\r\n    var self = this;\r\n    return new Promise((resolve, reject) => {\r\n      self.gameHub.instance.server.endGame(self.game.gameId).done(() => {\r\n        console.log(\"request end game on server.\");\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  getHighscore() {\r\n    var self = this;\r\n    self.gameHub.instance.server.getHighscore(self.game.gameId).done(() => {\r\n      console.log(\"request get highscore was received on server.\");\r\n    });\r\n  }\r\n\r\n  updateQuestions(questions) {\r\n    var self = this;\r\n    return new Promise((resolve, reject) => {\r\n      self.gameHub.instance.server.updateQuestions(self.game.gameId, questions).done(() => {\r\n        console.log(\"update questions request was received on server.\");\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n",null,null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"..\\src"}