{"version":3,"sources":["app.js","environment.js","main.js","game/create.js","game/join.js","home/index.js","highscore/highscore-table.js","highscore/highscore.js","lobby/lobby.js","question/question.js","resources/index.js","services/game-hub-singleton.js","services/signalr-service.js","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/app.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/game/create.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/game/join.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/highscore/highscore-table.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/highscore/highscore.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/home/index.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/lobby/lobby.html","D:/projects/wedding-quiz/backend/MrAndMrs.App3/wwwroot/src/question/question.html"],"names":["App","message","configureRouter","config","router","title","map","route","name","moduleId","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","create","signalrService","eventAggregator","questions","playerlist","activate","game","routeData","self","console","log","window","localStorage","setItem","gameId","verifyConnected","subscribe","updatedPlayerList","startGame","navigateToRoute","isModerator","join","inject","theRouter","guid","s4","Math","floor","random","toString","substring","joinGame","client","accountKey","getItem","postParams","username","createRequest","asPost","withHeader","withContent","send","result","JSON","parse","data","response","Storage","alert","state","showHighscore","index","$","click","post","userName","val","text","ajax","url","method","createGame","HighscoreTableCustomElement","highscore","isFinished","currentQuestion","highscoreTableModel","Entries","names","score","answerStatistics","mrs","mr","both","params","currentQuestionIndex","statistics","playerList","totalPlayers","length","getHighscore","calculatePercentage","count","total","question","isLastQuestion","selectedAnswer","updatedQuestionIndex","questionIndex","info","nextQuestion","endGame","selectAnswer","answer","GameHubSingleton","hub","createGameHub","connection","createHubProxy","qs","logging","SignalrService","gameHub","getGameId","promise","resolve","reject","instance","on","updatedPlayerlist","publish","done","invoke","server","showNextQuestion"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n    constructor() {\r\n        this.message = 'Hello World!';\r\n    }\r\n\r\n    configureRouter(config, router) {\r\n        this.router = router;\r\n        config.title = 'Aurelia';\r\n        config.map([\r\n            { route: ['', 'home'], name: 'home', moduleId: 'home/index' },\r\n            { route: ['/game/create'], name: 'gameCreation', moduleId: 'game/create' },\r\n            { route: ['/game/join'], name: 'game', moduleId: 'game/join' },\r\n            { route: ['/question/question'], name: 'question', moduleId: 'question/question' },\r\n            { route: ['/highscore'], name: 'highscore', moduleId: 'highscore/highscore' },\r\n            { route: ['/lobby'], name: 'lobby', moduleId: 'lobby/lobby' }\r\n            // { route: 'users', name: 'users', moduleId: 'users/index', nav: true },\r\n            // { route: 'users/:id/detail', name: 'userDetail', moduleId: 'users/detail' },\r\n            // { route: 'files*path', name: 'files', moduleId: 'files/index', href: '#files', nav: true }\r\n        ]);\r\n    }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .router()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import { SignalrService } from 'services/signalr-service';\r\nimport { inject } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(SignalrService, EventAggregator, Router)\r\nexport class create {\r\n    constructor(signalrService, eventAggregator, router) {\r\n        this.message = 'Hello World!';\r\n        this.playerlist = [\"Noch keine Spieler\"];\r\n        this.signalrService = signalrService;\r\n        this.eventAggregator = eventAggregator;\r\n        this.router = router;\r\n    }\r\n\r\n    questions = [];\r\n\r\n    activate(game, routeData) {\r\n        var self = this;\r\n        console.log(\"passed game from other view\", game, routeData);\r\n        this.questions = game.questions;\r\n        this.game = game;\r\n\r\n        window.localStorage.setItem(\"username\", \"moderator\");\r\n        window.localStorage.setItem(\"currentGame\", game.gameId);\r\n        window.localStorage.setItem(\"isModerator\", true);\r\n\r\n\r\n        this.signalrService.verifyConnected(game.gameId)\r\n            .then(() => {\r\n                this.eventAggregator.subscribe('playerListUpdated', (updatedPlayerList) => {\r\n                    console.log(\"we should update playerlist now for moderator view.\")\r\n                    console.log(updatedPlayerList);\r\n                    self.playerlist = updatedPlayerList;\r\n                });\r\n\r\n                self.gameId = game.gameId\r\n            });\r\n    }\r\n\r\n    startGame() {\r\n        var self = this;\r\n        this.signalrService.startGame(self.game.gameId)\r\n            .then(() => {\r\n                console.log(\"change view now\");\r\n                self.router.navigateToRoute(\"question\", {\r\n                    isModerator: true,\r\n                    gameId: self.game.gameId\r\n                });\r\n            });\r\n    }\r\n}\r\n","import { HttpClient } from \"aurelia-http-client\";\r\nimport { Router } from 'aurelia-router';\r\n\r\nexport class join {\r\n\r\n    static inject() { return [Router]; }\r\n\r\n    constructor(router) {\r\n        this.name = \"\";\r\n        this.gameId = \"\";\r\n        this.theRouter = router;\r\n    }\r\n\r\n    guid() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n            this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n    s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n\r\n    joinGame() {\r\n        var client = new HttpClient();\r\n\r\n        var accountKey = window.localStorage.getItem(\"accountKey\");\r\n        if(!accountKey){\r\n            accountKey = this.guid();\r\n            window.localStorage.setItem(\"accountKey\", accountKey);\r\n        }\r\n\r\n        var postParams = {\r\n            username: this.name,\r\n            gameId: this.gameId,\r\n            accountKey : accountKey\r\n        };\r\n\r\n        console.log(\"try to join game\", postParams);\r\n\r\n        client.createRequest(\"/game/join\")\r\n            .asPost()\r\n            .withHeader('Content-Type', 'application/json; charset=utf-8')\r\n            .withContent(postParams)\r\n            .send()\r\n            .then(data => {\r\n                var result = JSON.parse(data.response);\r\n                console.log(\"result\", result);\r\n\r\n                if (result.result === \"allow_connection\") {\r\n                    if (typeof (Storage) !== \"undefined\") {\r\n                        // Code for localStorage/sessionStorage.\r\n                        window.localStorage.setItem(\"username\", postParams.username);\r\n                        window.localStorage.setItem(\"currentGame\", result.game.gameId);\r\n                        window.localStorage.setItem(\"isModerator\", false);\r\n                    } else {\r\n                        alert(\"Sorry, no support for your browser.\")\r\n                        return;\r\n                    }\r\n\r\n                    // -> lobby\r\n                    if (result.game.state === 0) {\r\n                        this.theRouter.navigateToRoute(\"lobby\", {\r\n                            gameId: result.game.gameId,\r\n                            username: postParams.username\r\n                        });\r\n                    }\r\n\r\n                    // -> question\r\n                    if (result.game.state === 1) {\r\n                        this.theRouter.navigateToRoute(\"question\", {\r\n                            gameId: result.game.gameId,\r\n                        });\r\n                    }\r\n\r\n                    // -> question\r\n                    if (result.game.state === 2) {\r\n                        this.theRouter.navigateToRoute(\"highscore\", {\r\n                            gameId: result.game.gameId,\r\n                        });\r\n                    }\r\n\r\n\r\n                } else {\r\n                    alert(result.result);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    showHighscore() {\r\n        this.theRouter.navigateToRoute(\"highscore\", {\r\n            gameId: this.gameId,\r\n        });\r\n    }\r\n\r\n}\r\n","import {HttpClient} from \"aurelia-http-client\";\r\nimport {Router} from 'aurelia-router';\r\n\r\nlet client = new HttpClient();\r\n\r\nexport class index {\r\n\r\n    static inject() { return [Router]; }\r\n\r\n    constructor(router){\r\n        this.theRouter = router;\r\n    }\r\n\r\n    activate() {\r\n        $(\"#publishPostButton\").click(function() {\r\n\r\n            const post = {\r\n                userName: $(\"#userNameInput\").val() || \"Guest\",\r\n                text: $(\"#textInput\").val()\r\n            };\r\n            $.ajax({\r\n                url: \"/api/Posts/AddPost\",\r\n                method: \"POST\",\r\n                data: post\r\n            });\r\n        });\r\n    }\r\n\r\n    createGame() {\r\n        console.log(\"create game start\");\r\n\r\n        client.post(\"/game/create\")\r\n            .then(data => {\r\n                var game = JSON.parse(data.response);\r\n                console.log(\"created game on server\", game);\r\n                this.theRouter.navigateToRoute(\"gameCreation\", game);\r\n            });\r\n\r\n       \r\n    }\r\n}","import { bindable } from 'aurelia-framework';\r\n\r\nexport class HighscoreTableCustomElement {\r\n  @bindable model;\r\n}\r\n\r\n","import { HttpClient } from \"aurelia-http-client\";\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { SignalrService } from 'services/signalr-service';\r\nimport { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport {computedFrom} from 'aurelia-framework';\r\n\r\n@inject(SignalrService, EventAggregator, Router)\r\nexport class highscore {\r\n    constructor(signalrService, eventAggregator, router) {\r\n        this.message = 'Hello World!';\r\n        this.isFinished = false;\r\n        this.eventAggregator = eventAggregator;\r\n        this.signalrService = signalrService;\r\n        this.currentQuestion = \"test\";\r\n        this.highscoreTableModel = {\r\n            Entries: [{\r\n                names: \"?\",\r\n                score: \"?\"\r\n            }],\r\n        };\r\n\r\n        this.answerStatistics = {\r\n            mrs: 0,\r\n            mr: 0,\r\n            both: 0\r\n        };\r\n    }\r\n\r\n    activate(params) {\r\n        var self = this;\r\n\r\n\r\n        this.eventAggregator.subscribe(\"highscoreUpdated\", function (highscore) {\r\n            console.log(\"highscore should be updated.\", highscore);\r\n            self.highscoreTableModel = highscore;\r\n        });\r\n\r\n        this.eventAggregator.subscribe(\"gameUpdated\", function (game) {\r\n            console.log(\"game updated.\", game);\r\n            self.game = game;\r\n            self.currentQuestion = game.questions[game.currentQuestionIndex];\r\n        });\r\n\r\n        this.eventAggregator.subscribe(\"answerSelected\", function (statistics) {\r\n            console.log(\"Answer statistic updated.\", statistics);\r\n            self.answerStatistics = statistics;\r\n        });\r\n\r\n        this.eventAggregator.subscribe(\"playerListUpdated\", function (playerList) {\r\n            self.totalPlayers = playerList.length;\r\n        });\r\n\r\n        this.game = {\r\n            questions: [],\r\n        };\r\n\r\n        this.signalrService.verifyConnected(params.gameId)\r\n            .then((game) => {\r\n                self.game = game;\r\n                console.log(\"received game on connected state\", game);\r\n                self.signalrService.getHighscore();\r\n                return game;\r\n            });\r\n    }\r\n\r\n    @computedFrom\r\n    get statsMrs() {\r\n        return this.calculatePercentage(this.answerStatistics.mrs, this.totalPlayers);\r\n    }\r\n\r\n    @computedFrom\r\n    get statsMr() {\r\n        return this.calculatePercentage(this.answerStatistics.mr, this.totalPlayers);\r\n    }\r\n    \r\n    @computedFrom\r\n    get statsBoth() {\r\n        return this.calculatePercentage(this.answerStatistics.both, this.totalPlayers);\r\n    }\r\n\r\n    calculatePercentage(count, total) {\r\n        return Math.floor((count / total) * 100);\r\n    }\r\n}\r\n","import { SignalrService } from 'services/signalr-service';\r\nimport { inject } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(SignalrService, EventAggregator, Router)\r\nexport class join {\r\n    constructor(signalrService, eventAggregator, router) {\r\n        console.log(\"lobby.js: received signalr service in constructor\")\r\n        this.message = 'Hello World!';\r\n        this.playerlist = [\"Noch keine Spieler\"];\r\n        this.signalrService = signalrService;\r\n        this.eventAggregator = eventAggregator;\r\n        this.router = router;\r\n    }\r\n\r\n    activate(params) {\r\n        var self = this;\r\n        console.log(\"welcome to the lobby\");\r\n\r\n        this.signalrService.verifyConnected(params.gameId)\r\n            .then(() => {\r\n                this.eventAggregator.subscribe('playerListUpdated', (updatedPlayerList) => {\r\n                    console.log(\"we should update playerlist now. yes works\")\r\n                    console.log(updatedPlayerList);\r\n                    self.playerlist = updatedPlayerList;\r\n                })\r\n\r\n                this.eventAggregator.subscribe(\"gameStarted\", (game) => {\r\n                    self.router.navigateToRoute(\"question\", {\r\n                        isModerator: false,\r\n                        game: game,\r\n                    });\r\n                });\r\n            });\r\n    }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { SignalrService } from 'services/signalr-service';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(SignalrService, EventAggregator, Router)\r\nexport class question {\r\n    constructor(signalrService, eventAggregator, router) {\r\n        this.message = 'Hello World!';\r\n        this.isModerator = false;\r\n        this.signalrService = signalrService;\r\n        this.eventAggregator = eventAggregator;\r\n        this.router = router;\r\n        this.isLastQuestion = false;\r\n        this.selectedAnswer =  -1;\r\n    }\r\n\r\n    activate(params) {\r\n        var self = this;\r\n        self.gameId = params.gameId;\r\n\r\n        this.signalrService.verifyConnected(params.gameId)\r\n            .then((game) => {\r\n                self.game = game;\r\n                this.eventAggregator.subscribe(\"questionChangeRequested\", function (updatedQuestionIndex) {\r\n                    console.log(\"view should change question now.\");\r\n                    self.questionIndex = updatedQuestionIndex;\r\n                    self.currentQuestion = game.questions[self.questionIndex];\r\n                    self.isLastQuestion = (self.questionIndex + 1 === game.questions.length);\r\n                    self.selectedAnswer = -1;\r\n                });\r\n\r\n                this.eventAggregator.subscribe(\"answerSelected\", function (info) {\r\n                    console.log(\"some user selected answer\", info);\r\n                });\r\n\r\n                this.eventAggregator.subscribe(\"gameEnded\", function () {\r\n                    console.log(\"moderator as finished game.\");\r\n                    self.router.navigateToRoute(\"highscore\", {\r\n                        gameId: self.gameId\r\n                    });\r\n                });\r\n\r\n                console.log(\"question view activated with params\", params);\r\n                this.isModerator = params.isModerator === \"true\";\r\n                this.questionIndex = game.currentQuestionIndex;\r\n                this.currentQuestion = game.questions[this.questionIndex];\r\n                this.isLastQuestion = (self.questionIndex + 1 === game.questions.length);\r\n            });\r\n    }\r\n\r\n    nextQuestion() {\r\n        var self = this;\r\n        this.signalrService.verifyConnected()\r\n            .then(() => self.signalrService.nextQuestion());\r\n    }\r\n\r\n    endGame() {\r\n        var self = this;\r\n        self.signalrService.verifyConnected()\r\n            .then(() => self.signalrService.endGame());\r\n    }\r\n\r\n    selectAnswer(answer) {\r\n        var index = this.questionIndex;\r\n        this.selectedAnswer = answer;\r\n        this.signalrService.selectAnswer(answer, index)\r\n            .then(() => {\r\n                console.log(\"user info: selected answer\" + answer + \"for questionIndex: \" + index);\r\n            });\r\n    }\r\n\r\n\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","export class GameHubSingleton {\r\n    constructor() {\r\n        this.hub = false;\r\n\r\n    }\r\n\r\n\r\n    createGameHub(username, gameId) {\r\n        if (this.hub) {\r\n            return hub;\r\n        }\r\n\r\n        var hub = $.connection.hub.createHubProxy(\"postsHub\");\r\n        $.connection.hub.qs = 'username=' + username + '&gameId=' + gameId;\r\n        $.connection.hub.logging = true;\r\n\r\n        this.hub = hub;\r\n        return hub;\r\n    }\r\n\r\n    get instance() {\r\n        return this.hub;\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { GameHubSingleton } from 'services/game-hub-singleton';\r\n\r\n@inject(EventAggregator, GameHubSingleton)\r\nexport class SignalrService {\r\n  constructor(eventAggregator, gameHub) {\r\n    console.log(\"signalr service constructor created\")\r\n    this.eventAggregator = eventAggregator;\r\n    this.gameHub = gameHub;\r\n  }\r\n\r\n  activate(params) {\r\n    console.log(\"signalr service activated\")\r\n  }\r\n\r\n  getGameId() {\r\n    var gameId = window.localStorage.getItem(\"currentGame\");\r\n    if (!gameId) {\r\n      throw \"No gameId currently attached to.\";\r\n    }\r\n\r\n    return gameId;\r\n  }\r\n\r\n  verifyConnected(gameId) {\r\n    var username = window.localStorage.getItem(\"username\");\r\n\r\n    if (!gameId) {\r\n      gameId = this.getGameId();\r\n    }\r\n\r\n    var self = this;\r\n\r\n    var promise = new Promise(\r\n      (resolve, reject) => {\r\n\r\n        // already connected hack\r\n        if (!!self.gameHub.instance) {\r\n          resolve(self.game);\r\n          return;\r\n        }\r\n        var gameHub = self.gameHub.createGameHub(username, gameId);\r\n\r\n        gameHub.on('playerListUpdated', function (updatedPlayerlist) {\r\n          console.log(\"Received playerlist\");\r\n          console.log(updatedPlayerlist);\r\n          self.eventAggregator.publish('playerListUpdated', updatedPlayerlist);\r\n        });\r\n\r\n        gameHub.on(\"gameStarted\", function (game) {\r\n          console.log(\"server signalled game was started by moderator\");\r\n          self.eventAggregator.publish('gameStarted', game);\r\n        });\r\n\r\n        gameHub.on(\"questionChangeRequested\", function (response) {\r\n          console.log(\"server signalled question change\", response);\r\n          self.eventAggregator.publish('questionChangeRequested', response);\r\n        });\r\n\r\n        gameHub.on(\"answerSelected\", function (response) {\r\n          console.log(\"user selected answer\", response);\r\n          self.eventAggregator.publish('answerSelected', response);\r\n        });\r\n\r\n        gameHub.on(\"gameEnded\", function (response) {\r\n          console.log(\"moderator has finished the game\", response);\r\n          self.eventAggregator.publish('gameEnded', response);\r\n        });\r\n\r\n        gameHub.on(\"gameUpdated\", function (game) {\r\n          self.game = game;\r\n          resolve(game);\r\n          console.log(\"server sent updated game.\", game);\r\n          self.eventAggregator.publish('gameUpdated', game);\r\n        });\r\n\r\n        gameHub.on(\"highscoreUpdated\", function (highscore) {\r\n          console.log(\"server sent highscore update.\", highscore);\r\n          self.eventAggregator.publish('highscoreUpdated', highscore);\r\n        });\r\n\r\n        $.connection.hub.start().done(function () {\r\n          console.log(\"hub is started now.\");\r\n          gameHub.invoke('updatePlayerList');\r\n        });\r\n\r\n      }\r\n    );\r\n\r\n    return promise;\r\n  }\r\n\r\n  startGame(gameId) {\r\n    var self = this;\r\n    return new Promise((resolve, reject) => {\r\n      console.log(\"triggered game start\");\r\n      self.gameHub.instance.server.startGame(gameId).done(() => {\r\n        console.log(\"game started successfully\");\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  nextQuestion() {\r\n    var self = this;\r\n    console.log(\"moderator switches to next question\");\r\n    return new Promise((resolve, reject) => {\r\n      self.gameHub.instance.server.showNextQuestion(self.game.gameId).done(() => {\r\n        console.log(\"next question request sent.\");\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  selectAnswer(answer, questionIndex) {\r\n    var self = this;\r\n    return new Promise((resolve, reject) => {\r\n      self.gameHub.instance.server.selectAnswer(answer, questionIndex).done(() => {  // todo user info\r\n        console.log(\"selected answer sent to server\", answer, questionIndex);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  endGame() {\r\n    var self = this;\r\n    return new Promise((resolve, reject) => {\r\n      self.gameHub.instance.server.endGame(self.game.gameId).done(() => {\r\n        console.log(\"request end game on server.\");\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  getHighscore() {\r\n    var self = this;\r\n    self.gameHub.instance.server.getHighscore(self.game.gameId).done(() => {\r\n      console.log(\"request get highscore was received on server.\");\r\n    });\r\n  }\r\n}\r\n\r\n",null,null,null,null,null,null,null,null],"sourceRoot":"..\\src"}